# indent w/ 2 spaces
source: |
  a[1]+2|c*(sin(y)^!3.5*d[3]);
  b = bit[8](a)[2:4];
reference: |
  program
    header
    statement
      expressionStatement
        expression
          logicalAndExpression
            bitOrExpression
              bitOrExpression
                xOrExpression
                  bitAndExpression
                    equalityExpression
                      comparisonExpression
                        bitShiftExpression
                          additiveExpression
                            additiveExpression
                              multiplicativeExpression
                                unaryExpression
                                  powerExpression
                                    indexExpression
                                      indexExpression
                                        expressionTerminator
                                          a
                                      indexOperator
                                        [
                                        expression
                                          expressionTerminator
                                            1
                                        ]
                            +
                            multiplicativeExpression
                              unaryExpression
                                powerExpression
                                  indexExpression
                                    expressionTerminator
                                      2
              |
              xOrExpression
                bitAndExpression
                  equalityExpression
                    comparisonExpression
                      bitShiftExpression
                        additiveExpression
                          multiplicativeExpression
                            multiplicativeExpression
                              unaryExpression
                                powerExpression
                                  indexExpression
                                    expressionTerminator
                                      c
                            *
                            unaryExpression
                              powerExpression
                                indexExpression
                                  expressionTerminator
                                    (
                                    expression
                                      logicalAndExpression
                                        bitOrExpression
                                          xOrExpression
                                            xOrExpression
                                              bitAndExpression
                                                equalityExpression
                                                  comparisonExpression
                                                    bitShiftExpression
                                                      additiveExpression
                                                        multiplicativeExpression
                                                          unaryExpression
                                                            powerExpression
                                                              indexExpression
                                                                expressionTerminator
                                                                  builtInCall
                                                                    sin
                                                                    (
                                                                    expressionList
                                                                      expression
                                                                        expressionTerminator
                                                                          y
                                                                    )
                                            ^
                                            bitAndExpression
                                              equalityExpression
                                                comparisonExpression
                                                  bitShiftExpression
                                                    additiveExpression
                                                      multiplicativeExpression
                                                        multiplicativeExpression
                                                          unaryExpression
                                                            unaryOperator
                                                              !
                                                            powerExpression
                                                              indexExpression
                                                                expressionTerminator
                                                                  3.5
                                                        *
                                                        unaryExpression
                                                          powerExpression
                                                            indexExpression
                                                              indexExpression
                                                                expressionTerminator
                                                                  d
                                                              indexOperator
                                                                [
                                                                expression
                                                                  expressionTerminator
                                                                    3
                                                                ]
                                    )
        ;
    statement
      assignmentStatement
        classicalAssignment
          indexedIdentifier
            b
          assignmentOperator
            =
          expression
            unaryExpression
              powerExpression
                indexExpression
                  indexExpression
                    expressionTerminator
                      builtInCall
                        castOperator
                          classicalType
                            nonArrayType
                              bitType
                                bit
                              designator
                                [
                                expression
                                  expressionTerminator
                                    8
                                ]
                        (
                        expressionList
                          expression
                            expressionTerminator
                              a
                        )
                  indexOperator
                    [
                    rangeDefinition
                      expression
                        expressionTerminator
                          2
                      :
                      expression
                        expressionTerminator
                          4
                    ]
        ;
