# indent w/ 2 spaces
source: |
  array[uint[16], 2, 2] a = {{1, 2}, {3, 4}};
  array[uint[16], 2, 4] b = {{1, 2, 3, 4}, {5, 6, 7, 8}};
  // Various forms of testing that assignments can be made to indexed
  // identifiers, and from indexed identifiers.
  a = b[0:1][0:1];
  a[0:1] = b[0:1][0:1];
  a[0] = b[0][0:1];
  a[0][0] = b[0][0];
  a[0][0:1] = b[1][1:2:3];
  a[0:1][0] = b[0:1][0];
  a[0:1][0:1] = b[0:1][0:1];
reference: |
  program
    header
    statement
      classicalDeclarationStatement
        classicalDeclaration
          arrayDeclaration
            arrayType
              array
              [
              nonArrayType
                singleDesignatorType
                  uint
                  designator
                    [
                    expression
                      expressionTerminator
                        16
                    ]
              ,
              expressionList
                expression
                  expressionTerminator
                    2
                ,
                expression
                  expressionTerminator
                    2
              ]
            a
            =
            arrayInitializer
              {
              arrayInitializer
                {
                expression
                  expressionTerminator
                    1
                ,
                expression
                  expressionTerminator
                    2
                }
              ,
              arrayInitializer
                {
                expression
                  expressionTerminator
                    3
                ,
                expression
                  expressionTerminator
                    4
                }
              }
        ;
    statement
      classicalDeclarationStatement
        classicalDeclaration
          arrayDeclaration
            arrayType
              array
              [
              nonArrayType
                singleDesignatorType
                  uint
                  designator
                    [
                    expression
                      expressionTerminator
                        16
                    ]
              ,
              expressionList
                expression
                  expressionTerminator
                    2
                ,
                expression
                  expressionTerminator
                    4
              ]
            b
            =
            arrayInitializer
              {
              arrayInitializer
                {
                expression
                  expressionTerminator
                    1
                ,
                expression
                  expressionTerminator
                    2
                ,
                expression
                  expressionTerminator
                    3
                ,
                expression
                  expressionTerminator
                    4
                }
              ,
              arrayInitializer
                {
                expression
                  expressionTerminator
                    5
                ,
                expression
                  expressionTerminator
                    6
                ,
                expression
                  expressionTerminator
                    7
                ,
                expression
                  expressionTerminator
                    8
                }
              }
        ;
    statement
      assignmentStatement
        classicalAssignment
          indexedIdentifier
            a
          assignmentOperator
            =
          expression
            unaryExpression
              powerExpression
                indexExpression
                  indexExpression
                    indexExpression
                      expressionTerminator
                        b
                    indexOperator
                      [
                      rangeDefinition
                        expression
                          expressionTerminator
                            0
                        :
                        expression
                          expressionTerminator
                            1
                      ]
                  indexOperator
                    [
                    rangeDefinition
                      expression
                        expressionTerminator
                          0
                      :
                      expression
                        expressionTerminator
                          1
                    ]
        ;
    statement
      assignmentStatement
        classicalAssignment
          indexedIdentifier
            a
            indexOperator
              [
              rangeDefinition
                expression
                  expressionTerminator
                    0
                :
                expression
                  expressionTerminator
                    1
              ]
          assignmentOperator
            =
          expression
            unaryExpression
              powerExpression
                indexExpression
                  indexExpression
                    indexExpression
                      expressionTerminator
                        b
                    indexOperator
                      [
                      rangeDefinition
                        expression
                          expressionTerminator
                            0
                        :
                        expression
                          expressionTerminator
                            1
                      ]
                  indexOperator
                    [
                    rangeDefinition
                      expression
                        expressionTerminator
                          0
                      :
                      expression
                        expressionTerminator
                          1
                    ]
        ;
    statement
      assignmentStatement
        classicalAssignment
          indexedIdentifier
            a
            indexOperator
              [
              expression
                expressionTerminator
                  0
              ]
          assignmentOperator
            =
          expression
            unaryExpression
              powerExpression
                indexExpression
                  indexExpression
                    indexExpression
                      expressionTerminator
                        b
                    indexOperator
                      [
                      expression
                        expressionTerminator
                          0
                      ]
                  indexOperator
                    [
                    rangeDefinition
                      expression
                        expressionTerminator
                          0
                      :
                      expression
                        expressionTerminator
                          1
                    ]
        ;
    statement
      assignmentStatement
        classicalAssignment
          indexedIdentifier
            a
            indexOperator
              [
              expression
                expressionTerminator
                  0
              ]
            indexOperator
              [
              expression
                expressionTerminator
                  0
              ]
          assignmentOperator
            =
          expression
            unaryExpression
              powerExpression
                indexExpression
                  indexExpression
                    indexExpression
                      expressionTerminator
                        b
                    indexOperator
                      [
                      expression
                        expressionTerminator
                          0
                      ]
                  indexOperator
                    [
                    expression
                      expressionTerminator
                        0
                    ]
        ;
    statement
      assignmentStatement
        classicalAssignment
          indexedIdentifier
            a
            indexOperator
              [
              expression
                expressionTerminator
                  0
              ]
            indexOperator
              [
              rangeDefinition
                expression
                  expressionTerminator
                    0
                :
                expression
                  expressionTerminator
                    1
              ]
          assignmentOperator
            =
          expression
            unaryExpression
              powerExpression
                indexExpression
                  indexExpression
                    indexExpression
                      expressionTerminator
                        b
                    indexOperator
                      [
                      expression
                        expressionTerminator
                          1
                      ]
                  indexOperator
                    [
                    rangeDefinition
                      expression
                        expressionTerminator
                          1
                      :
                      expression
                        expressionTerminator
                          2
                      :
                      expression
                        expressionTerminator
                          3
                    ]
        ;
    statement
      assignmentStatement
        classicalAssignment
          indexedIdentifier
            a
            indexOperator
              [
              rangeDefinition
                expression
                  expressionTerminator
                    0
                :
                expression
                  expressionTerminator
                    1
              ]
            indexOperator
              [
              expression
                expressionTerminator
                  0
              ]
          assignmentOperator
            =
          expression
            unaryExpression
              powerExpression
                indexExpression
                  indexExpression
                    indexExpression
                      expressionTerminator
                        b
                    indexOperator
                      [
                      rangeDefinition
                        expression
                          expressionTerminator
                            0
                        :
                        expression
                          expressionTerminator
                            1
                      ]
                  indexOperator
                    [
                    expression
                      expressionTerminator
                        0
                    ]
        ;
    statement
      assignmentStatement
        classicalAssignment
          indexedIdentifier
            a
            indexOperator
              [
              rangeDefinition
                expression
                  expressionTerminator
                    0
                :
                expression
                  expressionTerminator
                    1
              ]
            indexOperator
              [
              rangeDefinition
                expression
                  expressionTerminator
                    0
                :
                expression
                  expressionTerminator
                    1
              ]
          assignmentOperator
            =
          expression
            unaryExpression
              powerExpression
                indexExpression
                  indexExpression
                    indexExpression
                      expressionTerminator
                        b
                    indexOperator
                      [
                      rangeDefinition
                        expression
                          expressionTerminator
                            0
                        :
                        expression
                          expressionTerminator
                            1
                      ]
                  indexOperator
                    [
                    rangeDefinition
                      expression
                        expressionTerminator
                          0
                      :
                      expression
                        expressionTerminator
                          1
                    ]
        ;
