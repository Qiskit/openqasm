# indent w/ 2 spaces
source: |
  if (x == a) {
    for i in [0:2:4] x[i] += 1;
  }
  else CX x[0], x[1];
reference: |
  program
    header
    statement
      branchingStatement
        if
        (
        expression
          logicalAndExpression
            bitOrExpression
              xOrExpression
                bitAndExpression
                  equalityExpression
                    equalityExpression
                      comparisonExpression
                        bitShiftExpression
                          additiveExpression
                            multiplicativeExpression
                              unaryExpression
                                powerExpression
                                  indexExpression
                                    expressionTerminator
                                      x
                    ==
                    comparisonExpression
                      bitShiftExpression
                        additiveExpression
                          multiplicativeExpression
                            unaryExpression
                              powerExpression
                                indexExpression
                                  expressionTerminator
                                    a
        )
        programBlock
          {
          statement
            loopStatement
              loopSignature
                for
                i
                in
                setDeclaration
                  [
                  rangeDefinition
                    expression
                      expressionTerminator
                        0
                    :
                    expression
                      expressionTerminator
                        2
                    :
                    expression
                      expressionTerminator
                        4
                  ]
              programBlock
                statement
                  assignmentStatement
                    classicalAssignment
                      indexedIdentifier
                        x
                        indexOperator
                          [
                          expression
                            expressionTerminator
                              i
                          ]
                      assignmentOperator
                        +=
                      expression
                        expressionTerminator
                          1
                    ;
          }
        else
        programBlock
          statement
            quantumStatement
              quantumInstruction
                quantumGateCall
                  quantumGateName
                    CX
                  indexedIdentifier
                    x
                    indexOperator
                      [
                      expression
                        expressionTerminator
                          0
                      ]
                  ,
                  indexedIdentifier
                    x
                    indexOperator
                      [
                      expression
                        expressionTerminator
                          1
                      ]
              ;
