# indent w/ 2 spaces
source: |
  while (i < 10) {
    for j in {1, 4, 6} reset q[j];
    if (i == 8) break;
    else continue;
  }
  end;
reference: |
  program
    header
    statement
      loopStatement
        loopSignature
          while
          (
          expression
            logicalAndExpression
              bitOrExpression
                xOrExpression
                  bitAndExpression
                    equalityExpression
                      comparisonExpression
                        comparisonExpression
                          bitShiftExpression
                            additiveExpression
                              multiplicativeExpression
                                unaryExpression
                                  powerExpression
                                    indexExpression
                                      expressionTerminator
                                        i
                        <
                        bitShiftExpression
                          additiveExpression
                            multiplicativeExpression
                              unaryExpression
                                powerExpression
                                  indexExpression
                                    expressionTerminator
                                      10
          )
        programBlock
          {
          statement
            loopStatement
              loopSignature
                for
                j
                in
                setDeclaration
                  discreteSet
                    {
                    expression
                      expressionTerminator
                        1
                    ,
                    expression
                      expressionTerminator
                        4
                    ,
                    expression
                      expressionTerminator
                        6
                    }
              programBlock
                statement
                  quantumStatement
                    quantumInstruction
                      quantumReset
                        reset
                        indexedIdentifier
                          q
                          indexOperator
                            [
                            expression
                              expressionTerminator
                                j
                            ]
                    ;
          statement
            branchingStatement
              if
              (
              expression
                logicalAndExpression
                  bitOrExpression
                    xOrExpression
                      bitAndExpression
                        equalityExpression
                          equalityExpression
                            comparisonExpression
                              bitShiftExpression
                                additiveExpression
                                  multiplicativeExpression
                                    unaryExpression
                                      powerExpression
                                        indexExpression
                                          expressionTerminator
                                            i
                          ==
                          comparisonExpression
                            bitShiftExpression
                              additiveExpression
                                multiplicativeExpression
                                  unaryExpression
                                    powerExpression
                                      indexExpression
                                        expressionTerminator
                                          8
              )
              programBlock
                controlDirective
                  break
                  ;
              else
              programBlock
                controlDirective
                  continue
                  ;
          }
    statement
      endStatement
        end
        ;
