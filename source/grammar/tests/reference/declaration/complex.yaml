# indent w/ 2 spaces
source: |
  complex[int[32]] a;
  complex[float[40]] b = 4-5.5im;
  complex[angle[20]] d = a + b;
  complex[float[32]] c = a ** b;
reference: |
  program
    header
    statement
      classicalDeclarationStatement
        classicalDeclaration
          complexDeclaration
            complex
            [
            numericType
              singleDesignatorType
                int
                designator
                  [
                  expression
                    expressionTerminator
                      32
                  ]
            ]
            a
        ;
    statement
      classicalDeclarationStatement
        classicalDeclaration
          complexDeclaration
            complex
            [
            numericType
              singleDesignatorType
                float
                designator
                  [
                  expression
                    expressionTerminator
                      40
                  ]
            ]
            b
            equalsExpression
              =
              expression
                logicalAndExpression
                  bitOrExpression
                    xOrExpression
                      bitAndExpression
                        equalityExpression
                          comparisonExpression
                            bitShiftExpression
                              additiveExpression
                                additiveExpression
                                  multiplicativeExpression
                                    unaryExpression
                                      powerExpression
                                        indexExpression
                                          expressionTerminator
                                            4
                                -
                                multiplicativeExpression
                                  unaryExpression
                                    powerExpression
                                      indexExpression
                                        expressionTerminator
                                          5.5im
        ;
    statement
      classicalDeclarationStatement
        classicalDeclaration
          complexDeclaration
            complex
            [
            numericType
              singleDesignatorType
                angle
                designator
                  [
                  expression
                    expressionTerminator
                      20
                  ]
            ]
            d
            equalsExpression
              =
              expression
                logicalAndExpression
                  bitOrExpression
                    xOrExpression
                      bitAndExpression
                        equalityExpression
                          comparisonExpression
                            bitShiftExpression
                              additiveExpression
                                additiveExpression
                                  multiplicativeExpression
                                    unaryExpression
                                      powerExpression
                                        indexExpression
                                          expressionTerminator
                                            a
                                +
                                multiplicativeExpression
                                  unaryExpression
                                    powerExpression
                                      indexExpression
                                        expressionTerminator
                                          b
        ;
    statement
      classicalDeclarationStatement
        classicalDeclaration
          complexDeclaration
            complex
            [
            numericType
              singleDesignatorType
                float
                designator
                  [
                  expression
                    expressionTerminator
                      32
                  ]
            ]
            c
            equalsExpression
              =
              expression
                unaryExpression
                  powerExpression
                    powerExpression
                      indexExpression
                        expressionTerminator
                          a
                    **
                    indexExpression
                      expressionTerminator
                        b
        ;
